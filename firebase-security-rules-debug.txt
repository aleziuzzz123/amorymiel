# DEBUG Firebase Security Rules - Use these temporarily to test
# Go to: Firebase Console > Firestore Database > Rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Products - anyone can read, only admin can write
    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.email == 'admin@amorymiel.com';
    }
    
    // Services - anyone can read, only admin can write
    match /services/{serviceId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.email == 'admin@amorymiel.com';
    }
    
    // Users - users can read/write their own data, admin can read all
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && request.auth.email == 'admin@amorymiel.com';
    }
    
    // Orders - users can read their own, admin can read all
    match /orders/{orderId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.userId || 
        request.auth.email == 'admin@amorymiel.com'
      );
      allow write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Cart items - users can read/write their own, admin can read/write all
    match /cart_items/{cartItemId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.userId || 
        request.auth.email == 'admin@amorymiel.com'
      );
      allow write: if request.auth != null && (
        request.auth.uid == resource.data.userId || 
        request.auth.email == 'admin@amorymiel.com'
      );
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
  }
}
